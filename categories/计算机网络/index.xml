<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>计算机网络 on 些许风霜</title><link>https://bitfrost7.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</link><description>Recent content in 计算机网络 on 些许风霜</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>bitfrost</copyright><lastBuildDate>Thu, 18 Apr 2024 16:45:14 +0800</lastBuildDate><atom:link href="https://bitfrost7.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/index.xml" rel="self" type="application/rss+xml"/><item><title>计算机网络-DNS协议</title><link>https://bitfrost7.github.io/p/network/dns/</link><pubDate>Thu, 18 Apr 2024 16:45:14 +0800</pubDate><guid>https://bitfrost7.github.io/p/network/dns/</guid><description>&lt;h1 id="dns协议">
&lt;a href="#dns%e5%8d%8f%e8%ae%ae">#&lt;/a>
DNS协议
&lt;/h1>&lt;h2 id="什么是dns协议">
&lt;a href="#%e4%bb%80%e4%b9%88%e6%98%afdns%e5%8d%8f%e8%ae%ae">#&lt;/a>
什么是DNS协议？
&lt;/h2>&lt;h3 id="域名体系">
&lt;a href="#%e5%9f%9f%e5%90%8d%e4%bd%93%e7%b3%bb">#&lt;/a>
域名体系
&lt;/h3>&lt;ul>
&lt;li>域名层级&lt;/li>
&lt;li>域名服务器划分&lt;/li>
&lt;/ul>
&lt;h3 id="dns解析流程">
&lt;a href="#dns%e8%a7%a3%e6%9e%90%e6%b5%81%e7%a8%8b">#&lt;/a>
DNS解析流程
&lt;/h3>&lt;h3 id="dns报文格式">
&lt;a href="#dns%e6%8a%a5%e6%96%87%e6%a0%bc%e5%bc%8f">#&lt;/a>
DNS报文格式
&lt;/h3>&lt;h2 id="基于dns的网络攻击">
&lt;a href="#%e5%9f%ba%e4%ba%8edns%e7%9a%84%e7%bd%91%e7%bb%9c%e6%94%bb%e5%87%bb">#&lt;/a>
基于DNS的网络攻击
&lt;/h2>&lt;ul>
&lt;li>DNS劫持&lt;/li>
&lt;li>DNS污染&lt;/li>
&lt;/ul>
&lt;h2 id="httpdns">
&lt;a href="#httpdns">#&lt;/a>
HTTPDNS
&lt;/h2></description></item><item><title>计算机网络-HTTP协议</title><link>https://bitfrost7.github.io/p/network/http/</link><pubDate>Thu, 18 Apr 2024 14:50:50 +0800</pubDate><guid>https://bitfrost7.github.io/p/network/http/</guid><description>&lt;h1 id="http协议">
&lt;a href="#http%e5%8d%8f%e8%ae%ae">#&lt;/a>
HTTP协议
&lt;/h1>&lt;h2 id="什么是http">
&lt;a href="#%e4%bb%80%e4%b9%88%e6%98%afhttp">#&lt;/a>
什么是HTTP？
&lt;/h2>&lt;h3 id="持续连接">
&lt;a href="#%e6%8c%81%e7%bb%ad%e8%bf%9e%e6%8e%a5">#&lt;/a>
持续连接
&lt;/h3>&lt;h3 id="非持续连接">
&lt;a href="#%e9%9d%9e%e6%8c%81%e7%bb%ad%e8%bf%9e%e6%8e%a5">#&lt;/a>
非持续连接
&lt;/h3>&lt;h3 id="http报文格式">
&lt;a href="#http%e6%8a%a5%e6%96%87%e6%a0%bc%e5%bc%8f">#&lt;/a>
HTTP报文格式
&lt;/h3>&lt;h4 id="请求报文">
&lt;a href="#%e8%af%b7%e6%b1%82%e6%8a%a5%e6%96%87">#&lt;/a>
请求报文
&lt;/h4>&lt;ul>
&lt;li>请求行&lt;/li>
&lt;li>请求头&lt;/li>
&lt;/ul>
&lt;h4 id="响应报文">
&lt;a href="#%e5%93%8d%e5%ba%94%e6%8a%a5%e6%96%87">#&lt;/a>
响应报文
&lt;/h4>&lt;ul>
&lt;li>状态行和状态码&lt;/li>
&lt;li>首部行&lt;/li>
&lt;/ul>
&lt;h2 id="http发展">
&lt;a href="#http%e5%8f%91%e5%b1%95">#&lt;/a>
HTTP发展
&lt;/h2>&lt;h2 id="https加密">
&lt;a href="#https%e5%8a%a0%e5%af%86">#&lt;/a>
HTTPS加密
&lt;/h2>&lt;h2 id="cookie和session">
&lt;a href="#cookie%e5%92%8csession">#&lt;/a>
Cookie和Session
&lt;/h2>&lt;h2 id="web缓存代理和http网关">
&lt;a href="#web%e7%bc%93%e5%ad%98%e4%bb%a3%e7%90%86%e5%92%8chttp%e7%bd%91%e5%85%b3">#&lt;/a>
WEB缓存代理和HTTP网关
&lt;/h2>&lt;h2 id="基于http补充的协议">
&lt;a href="#%e5%9f%ba%e4%ba%8ehttp%e8%a1%a5%e5%85%85%e7%9a%84%e5%8d%8f%e8%ae%ae">#&lt;/a>
基于HTTP补充的协议
&lt;/h2>&lt;h2 id="http网络攻击">
&lt;a href="#http%e7%bd%91%e7%bb%9c%e6%94%bb%e5%87%bb">#&lt;/a>
HTTP网络攻击
&lt;/h2></description></item><item><title>计算机网络-简介</title><link>https://bitfrost7.github.io/p/network/introduction/</link><pubDate>Thu, 18 Apr 2024 10:34:34 +0800</pubDate><guid>https://bitfrost7.github.io/p/network/introduction/</guid><description>&lt;h1 id="计算机网络">
&lt;a href="#%e8%ae%a1%e7%ae%97%e6%9c%ba%e7%bd%91%e7%bb%9c">#&lt;/a>
计算机网络
&lt;/h1>&lt;p>计算机网络（Computer Network）是指将多台计算机和其他网络设备连接起来，使它们能够相互通信和共享资源的系统。&lt;/p>
&lt;h2 id="什么是internet">
&lt;a href="#%e4%bb%80%e4%b9%88%e6%98%afinternet">#&lt;/a>
什么是Internet？
&lt;/h2>&lt;p>因特网是一个世界范围的计算机网络，它是一个互联了遍及全世界数十亿计算设备的网络，可以说是世界上最大的一个计算机网络。&lt;/p>
&lt;ul>
&lt;li>端系统&lt;br>
通常将和Internet相连的这些主机，叫做&lt;strong>端系统&lt;/strong>（End System），可能是一台PC，也可能是一部手机，也可能是一台服务器。端系统分为两类：客户
(client)和服务器(server)。&lt;br>
客户端一般是使用互联网服务的用户，而服务器通常是提供服务的机器，通常性能更为强大，部署在数据中心IDC（data center），
数据中心往往有着更为复杂的网络架构。&lt;/li>
&lt;li>路由器&lt;br>
&lt;strong>路由器&lt;/strong>（Routers）是Internet的核心组件，负责在网络间转发数据包。通俗的来讲，路由器就像高速公路上的路牌，指示了车辆该往哪个方向走。
路由器依据数据包的IP地址和路由表决定数据包的最佳路径，并在不同网络之间执行数据包交换。&lt;/li>
&lt;li>交换机&lt;br>
&lt;strong>交换机&lt;/strong>（Switch）是计算机网络中用于连接多台计算机和其他网络设备的网络设备，负责在局域网（LAN）中实现数据包的转发和交换，从而实现设备之间的通信。
可以将交换机理解为就像环线路口连接了多条道路，任一驶入路口的车辆能根据自己的目的地选择出口，交换机也连接了多台计算机和网络设备，可以选择性地将数据包转发到特定的端口完成通信。&lt;/li>
&lt;li>ISP&lt;br>
&lt;strong>ISP&lt;/strong>指的是互联网服务提供商（Internet Service Provider），是指向个人、家庭、企业等提供互联网接入服务的公司或组织。每个ISP自身就是一个由多台分组交换机和多段通信链路组成的网络。
ISP分为地区ISP，在某一个城市提供接入服务；国家级ISP，比如中国联通；全球ISP，在全球范围内提供互联网接入服务的大型ISP，例如AT&amp;amp;T。
无论那种ISP都是一个独立的网络，较高级ISP都是通过高速光纤链路互联起来。&lt;/li>
&lt;li>协议&lt;br>
想象一下，当你和朋友聊天时，你们会遵循一定的语言规则（比如英语或中文的语法规则），确定谁先说话、说什么内容、怎样说才能确保对方理解。在网络世界中，设备之间的沟通同样需要这样的规则。
所谓协议，其实就是一系列规定好的语法，语义，时序，按照这样的规则，让通信双方都能理解。&lt;strong>网络协议&lt;/strong> (protocol) 定义了在两个或多个通信实体之间交换的报文的格式和顺序，以及报文发送和/或接收一条报文或其他事件所采取的动作。&lt;/li>
&lt;li>因特网标准和RFC文档
对于互联网通信，一个规范且通用的协议十分重要，因特网工程任务组(Internet Engineering Task Force, IETF )制定了一系列通信标准，并且这个标准也开放在互联网上，被称为 &lt;strong>请求评论&lt;/strong>（Request For Comment, RFC）。
例如RFC 894 定义了如何在以太网帧格式上封装IP数据报。&lt;/li>
&lt;/ul>
&lt;h2 id="internet是怎么工作的">
&lt;a href="#internet%e6%98%af%e6%80%8e%e4%b9%88%e5%b7%a5%e4%bd%9c%e7%9a%84">#&lt;/a>
Internet是怎么工作的？
&lt;/h2>&lt;h3 id="接入网">
&lt;a href="#%e6%8e%a5%e5%85%a5%e7%bd%91">#&lt;/a>
接入网
&lt;/h3>&lt;h3 id="核心网">
&lt;a href="#%e6%a0%b8%e5%bf%83%e7%bd%91">#&lt;/a>
核心网
&lt;/h3>&lt;ul>
&lt;li>分组交换&lt;/li>
&lt;li>电路交换&lt;/li>
&lt;/ul>
&lt;h3 id="分层网络体系">
&lt;a href="#%e5%88%86%e5%b1%82%e7%bd%91%e7%bb%9c%e4%bd%93%e7%b3%bb">#&lt;/a>
分层网络体系
&lt;/h3>&lt;h4 id="应用模型">
&lt;a href="#%e5%ba%94%e7%94%a8%e6%a8%a1%e5%9e%8b">#&lt;/a>
应用模型
&lt;/h4>&lt;ul>
&lt;li>应用层&lt;/li>
&lt;li>运输层&lt;/li>
&lt;li>网络层&lt;/li>
&lt;li>链路层&lt;/li>
&lt;li>物理层&lt;/li>
&lt;/ul>
&lt;h4 id="osi模型">
&lt;a href="#osi%e6%a8%a1%e5%9e%8b">#&lt;/a>
OSI模型
&lt;/h4>&lt;h4 id="封装分组卸载组装">
&lt;a href="#%e5%b0%81%e8%a3%85%e5%88%86%e7%bb%84%e5%8d%b8%e8%bd%bd%e7%bb%84%e8%a3%85">#&lt;/a>
封装，分组，卸载，组装
&lt;/h4>&lt;h2 id="internet发展和前景">
&lt;a href="#internet%e5%8f%91%e5%b1%95%e5%92%8c%e5%89%8d%e6%99%af">#&lt;/a>
Internet发展和前景
&lt;/h2>&lt;h3 id="历史">
&lt;a href="#%e5%8e%86%e5%8f%b2">#&lt;/a>
历史
&lt;/h3>&lt;h3 id="网络攻击">
&lt;a href="#%e7%bd%91%e7%bb%9c%e6%94%bb%e5%87%bb">#&lt;/a>
网络攻击
&lt;/h3>&lt;h3 id="前景">
&lt;a href="#%e5%89%8d%e6%99%af">#&lt;/a>
前景
&lt;/h3></description></item><item><title>dpdk学习02-运行helloworld</title><link>https://bitfrost7.github.io/p/network/dpdk/02/</link><pubDate>Wed, 03 Apr 2024 00:00:00 +0000</pubDate><guid>https://bitfrost7.github.io/p/network/dpdk/02/</guid><description>&lt;h2 id="dpdk开发">
&lt;a href="#dpdk%e5%bc%80%e5%8f%91">#&lt;/a>
dpdk开发
&lt;/h2>&lt;p>dpdk是一个提供了一个高性能网络框架，开发者可以在此基础上构建自己的网络应用程序，同时拥有接近硬件满速的性能。&lt;br>
dpdk框架主要组件有：&lt;/p>
&lt;ul>
&lt;li>环境适配层 EAL(Environment Abstraction Layer)&lt;br>
该组件通过提供了通用接口提供一些核心服务：&lt;br>
1. DPDK的加载和启动&lt;br>
2. 多线程和多进程执行方式&lt;br>
3. CPU亲和性设置&lt;br>
4. 系统内存分配和释放&lt;br>
5. 原子操作&lt;br>
6. 定时器&lt;br>
7. PCI总线访问 &lt;br>
8. &amp;hellip;&amp;hellip;&lt;/li>
&lt;li>环形缓冲区(rte_ring)
该组件提供了一个无锁的环形队列数据结构，支持多生产者，多消费者。ring主要用于不同核之间或是逻辑核上处理单元之间的通信。&lt;/li>
&lt;li>内存池管理（rte_mempool）
该组件主要职责就是在内存中分配指定数目对象的POOL。每个POOL以名称来唯一标识，并且使用一个ring来存储空闲的对象节点。&lt;/li>
&lt;li>网络报文缓冲区(rte_mbuf)
报文缓存组件提供了创建、释放报文缓存的能力，DPDK应用程序中使用这些报文缓存来存储消息。&lt;/li>
&lt;li>定时器(rte_timer)
该组件提供了定时服务，为函数异步执行提供支持，并且能在每个核上根据需要初始化。&lt;/li>
&lt;/ul>
&lt;p>除此之外，dpdk还提供了哈希（hash），最长前缀匹配的（lpm）算法库，以及ip协议相关的网络库等。
所有的dpdk api都能在&lt;a class="link" href="https://dpdk-docs.readthedocs.io/en/latest/prog_guide/intro.html" target="_blank" rel="noopener"
>官方文档&lt;/a>中找到，多熟悉即可。&lt;/p>
&lt;h3 id="helloworld">
&lt;a href="#helloworld">#&lt;/a>
HelloWorld
&lt;/h3>&lt;p>以下是官方自带的helloworld代码：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;string.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdint.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;errno.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;sys/queue.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;rte_memory.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;rte_launch.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;rte_eal.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;rte_per_lcore.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;rte_lcore.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;rte_debug.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">static&lt;/span> &lt;span class="kt">int&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf">lcore_hello&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nf">__attribute__&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">unused&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">arg&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">unsigned&lt;/span> &lt;span class="n">lcore_id&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lcore_id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">rte_lcore_id&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;hello from core %u&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lcore_id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">argc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">**&lt;/span>&lt;span class="n">argv&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">ret&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">unsigned&lt;/span> &lt;span class="n">lcore_id&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 1. 初始化环境抽象层（EAL）
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">ret&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">rte_eal_init&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">argc&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">argv&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ret&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">rte_panic&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Cannot init EAL&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* call lcore_hello() on every slave lcore */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 2. 在每个可用的lcore上调用lcore_hello
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nf">RTE_LCORE_FOREACH_WORKER&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lcore_id&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">rte_eal_remote_launch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lcore_hello&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">lcore_id&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* call it on master lcore too */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">lcore_hello&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">NULL&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">rte_eal_mp_wait_lcore&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>代码中关键在于：&lt;/p>
&lt;ul>
&lt;li>rte_eal_init();
这个函数初始化dpdk EAL环境抽象层，必须存在的函数。&lt;/li>
&lt;li>RTE_LCORE_FOREACH_SLAVE();
实际上是一个for循环的宏，遍历所有的可用slave核，需要传入一个循环变量lcore_id。&lt;/li>
&lt;li>rte_eal_remote_launch();
这个函数实际上就是让指定的slave核去执行函数，有些类似Golang中的go关键字。
第一个参数是f，执行的函数，这个函数接受一个&lt;code>void*&lt;/code> 指针，返回一个int，第二个参数是&lt;code>void *&lt;/code>，是回调函数的参数，第三个参数是运行函数的逻辑核id。&lt;/li>
&lt;li>rte_eal_mp_wait_lcore();
这个函数实际上就是等待所有核上的任务执行完成。类似go中的waitgroup。&lt;/li>
&lt;/ul>
&lt;p>整体代码执行的话，使用gcc 手动链接比较麻烦，直接使用官方给的示例MakeFile即可。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="cp"># SPDX-License-Identifier: BSD-3-Clause
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp"># Copyright(c) 2010-2014 Intel Corporation
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp"># binary name
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">APP&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">helloworld&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp"># all source are stored in SRCS-y
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="n">SRCS&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nl">y&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="n">main&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">c&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">PKGCONF&lt;/span> &lt;span class="o">?=&lt;/span> &lt;span class="n">pkg&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">config&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp"># Build using pkg-config variables if possible
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="nf">ifneq&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shell&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PKGCONF&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">exists&lt;/span> &lt;span class="n">libdpdk&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">echo&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">error&lt;/span> &lt;span class="s">&amp;#34;no installation of DPDK found&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">endif&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nl">all&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">shared&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="nl">PHONY&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">shared&lt;/span> &lt;span class="k">static&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nl">shared&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">build&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">APP&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">shared&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ln&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">sf&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">APP&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">shared&lt;/span> &lt;span class="n">build&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">APP&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">static&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">build&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">APP&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="k">static&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ln&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">sf&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">APP&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="k">static&lt;/span> &lt;span class="n">build&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">APP&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nl">PC_FILE&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="o">=&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shell&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PKGCONF&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">path&lt;/span> &lt;span class="n">libdpdk&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="o">&amp;gt;/&lt;/span>&lt;span class="n">dev&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">null&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">CFLAGS&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">O3&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shell&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PKGCONF&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">cflags&lt;/span> &lt;span class="n">libdpdk&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">LDFLAGS_SHARED&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shell&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PKGCONF&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">libs&lt;/span> &lt;span class="n">libdpdk&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">LDFLAGS_STATIC&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shell&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PKGCONF&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="k">static&lt;/span> &lt;span class="o">--&lt;/span>&lt;span class="n">libs&lt;/span> &lt;span class="n">libdpdk&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf">ifeq&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MAKECMDGOALS&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="k">static&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp"># check for broken pkg-config
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="nf">ifeq&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">shell&lt;/span> &lt;span class="n">echo&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">LDFLAGS_STATIC&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">grep&lt;/span> &lt;span class="err">&amp;#39;&lt;/span>&lt;span class="n">whole&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">archive&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nl">l&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">no&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">whole&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">archive&lt;/span>&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="p">),)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">warning&lt;/span> &lt;span class="s">&amp;#34;pkg-config output list does not contain drivers between &amp;#39;whole-archive&amp;#39;/&amp;#39;no-whole-archive&amp;#39; flags.&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">error&lt;/span> &lt;span class="s">&amp;#34;Cannot generate statically-linked binaries with this version of pkg-config&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">endif&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">endif&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">CFLAGS&lt;/span> &lt;span class="o">+=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">DALLOW_EXPERIMENTAL_API&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">build&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">APP&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nl">shared&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SRCS&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">Makefile&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PC_FILE&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">build&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CC&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CFLAGS&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SRCS&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">o&lt;/span> &lt;span class="err">$@&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">LDFLAGS&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">LDFLAGS_SHARED&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">build&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">APP&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="k">static&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SRCS&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">Makefile&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PC_FILE&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="n">build&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CC&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">CFLAGS&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SRCS&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">o&lt;/span> &lt;span class="err">$@&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">LDFLAGS&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">LDFLAGS_STATIC&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nl">build&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">mkdir&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">p&lt;/span> &lt;span class="err">$@&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">.&lt;/span>&lt;span class="nl">PHONY&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">clean&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nl">clean&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">rm&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">f&lt;/span> &lt;span class="n">build&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">APP&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">build&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">APP&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="k">static&lt;/span> &lt;span class="n">build&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="err">$&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">APP&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">shared&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">d&lt;/span> &lt;span class="n">build&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">rmdir&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">p&lt;/span> &lt;span class="n">build&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="开发环境搭建">
&lt;a href="#%e5%bc%80%e5%8f%91%e7%8e%af%e5%a2%83%e6%90%ad%e5%bb%ba">#&lt;/a>
开发环境搭建
&lt;/h3>&lt;p>clion+远程运行&lt;/p></description></item><item><title>dpdk学习00—预备知识</title><link>https://bitfrost7.github.io/p/network/dpdk/00/</link><pubDate>Mon, 01 Apr 2024 00:00:00 +0000</pubDate><guid>https://bitfrost7.github.io/p/network/dpdk/00/</guid><description>&lt;h2 id="认识dpdk">
&lt;a href="#%e8%ae%a4%e8%af%86dpdk">#&lt;/a>
认识dpdk
&lt;/h2>&lt;h3 id="传统网络的局限性">
&lt;a href="#%e4%bc%a0%e7%bb%9f%e7%bd%91%e7%bb%9c%e7%9a%84%e5%b1%80%e9%99%90%e6%80%a7">#&lt;/a>
传统网络的局限性
&lt;/h3>&lt;h3 id="dpdk框架的由来">
&lt;a href="#dpdk%e6%a1%86%e6%9e%b6%e7%9a%84%e7%94%b1%e6%9d%a5">#&lt;/a>
dpdk框架的由来
&lt;/h3>&lt;h3 id="dpdk的优势和现状">
&lt;a href="#dpdk%e7%9a%84%e4%bc%98%e5%8a%bf%e5%92%8c%e7%8e%b0%e7%8a%b6">#&lt;/a>
dpdk的优势和现状
&lt;/h3>&lt;h2 id="相关术语介绍">
&lt;a href="#%e7%9b%b8%e5%85%b3%e6%9c%af%e8%af%ad%e4%bb%8b%e7%bb%8d">#&lt;/a>
相关术语介绍
&lt;/h2>&lt;h2 id="c语言语法">
&lt;a href="#c%e8%af%ad%e8%a8%80%e8%af%ad%e6%b3%95">#&lt;/a>
C语言语法
&lt;/h2>&lt;ul>
&lt;li>include guards&lt;/li>
&lt;/ul></description></item></channel></rss>